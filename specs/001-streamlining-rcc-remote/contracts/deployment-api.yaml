openapi: 3.0.3
info:
  title: RCC Remote Deployment API
  description: Configuration API for automated deployment and scaling
  version: 1.0.0
servers:
  - url: https://rccremote.local:443/api/v1
    description: RCC Remote management API

paths:
  /deployment/validate:
    post:
      summary: Validate deployment configuration
      description: Validates deployment manifest before actual deployment
      operationId: validateDeployment
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeploymentManifest'
      responses:
        '200':
          description: Configuration is valid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationResponse'
        '400':
          description: Configuration validation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationResponse'

  /certificates/generate:
    post:
      summary: Generate SSL certificates
      description: Generates SSL certificates for specified server names
      operationId: generateCertificates
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CertificateRequest'
      responses:
        '200':
          description: Certificates generated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertificateResponse'
        '400':
          description: Certificate generation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /catalogs:
    get:
      summary: List available environment catalogs
      description: Returns list of all available RCC environment catalogs
      operationId: listCatalogs
      responses:
        '200':
          description: List of available catalogs
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CatalogList'

components:
  schemas:
    DeploymentManifest:
      type: object
      required:
        - type
        - environment
        - server_name
      properties:
        type:
          type: string
          enum: [docker-compose, kubernetes]
        environment:
          type: string
          enum: [development, staging, production]
        server_name:
          type: string
          pattern: '^[a-zA-Z0-9]([a-zA-Z0-9\-]{0,61}[a-zA-Z0-9])?(\.[a-zA-Z0-9]([a-zA-Z0-9\-]{0,61}[a-zA-Z0-9])?)*$'
          description: Valid DNS name for SSL certificates
        replica_count:
          type: integer
          minimum: 1
          maximum: 100
          default: 1
        resource_limits:
          type: object
          properties:
            cpu:
              type: string
              pattern: '^[0-9]+m?$|^[0-9]*\.?[0-9]+$'
              example: "500m"
            memory:
              type: string
              pattern: '^[0-9]+[KMGT]i?$'
              example: "1Gi"
            storage:
              type: string
              pattern: '^[0-9]+[KMGT]i?$'
              example: "10Gi"
        scaling_config:
          type: object
          properties:
            min_replicas:
              type: integer
              minimum: 1
              default: 1
            max_replicas:
              type: integer
              minimum: 1
              maximum: 100
              default: 10
            target_cpu_percent:
              type: integer
              minimum: 1
              maximum: 100
              default: 70

    ValidationResponse:
      type: object
      required:
        - valid
        - errors
      properties:
        valid:
          type: boolean
        errors:
          type: array
          items:
            type: object
            properties:
              field:
                type: string
              message:
                type: string
              code:
                type: string

    CertificateRequest:
      type: object
      required:
        - server_names
        - cert_type
      properties:
        server_names:
          type: array
          items:
            type: string
          minItems: 1
          maxItems: 10
        cert_type:
          type: string
          enum: [self-signed, ca-signed]
        validity_days:
          type: integer
          minimum: 1
          maximum: 3650
          default: 365

    CertificateResponse:
      type: object
      required:
        - server_cert
        - server_key
        - expiry_date
      properties:
        server_cert:
          type: string
          description: PEM-encoded server certificate
        server_key:
          type: string
          description: PEM-encoded private key (base64 encoded for JSON)
        root_ca:
          type: string
          description: PEM-encoded root CA certificate (if CA-signed)
        expiry_date:
          type: string
          format: date-time
        san_names:
          type: array
          items:
            type: string

    CatalogList:
      type: object
      required:
        - catalogs
        - total_count
      properties:
        catalogs:
          type: array
          items:
            $ref: '#/components/schemas/SampleCatalog'
        total_count:
          type: integer
          minimum: 0

    SampleCatalog:
      type: object
      required:
        - catalog_name
        - python_version
        - size_bytes
      properties:
        catalog_name:
          type: string
          pattern: '^[a-zA-Z0-9_-]+$'
        zip_file_path:
          type: string
        python_version:
          type: string
          pattern: '^[0-9]+\.[0-9]+\.[0-9]+$'
        conda_dependencies:
          type: array
          items:
            type: string
        robocorp_home_path:
          type: string
        size_bytes:
          type: integer
          minimum: 1
        checksum_sha256:
          type: string
          pattern: '^[a-f0-9]{64}$'

    ErrorResponse:
      type: object
      required:
        - error
        - message
      properties:
        error:
          type: string
        message:
          type: string
        details:
          type: object